What is Express and why use it?
    Express is a minimal node.js framework, a higher level of abstraction
    Express contains a very robust set of features:
        complex routing
        easier handling of requests and responses
        middleware
        server-side rendering
        etc
    Express allows for rapid development of node.js applications
        we don't have to re-invent the wheel
    Express makes it easier to organize our applications into the MVC architecture

API - Application Programming Interface
Web APIs
    But "Applications" can be other things:
        Node.js fs or http APIs ("node APIs");
        Browser's DOM JavaScript API;
        With object-oriented programming, when exposing methods to the public, we creating an API;

REST API architecture
    Seperate API into logical resources
        Resource or object or representation of something, which has data associated to it. Any information that can be named can be resource.
        tours
        users
        reviews
    Expose structured resource-based URL's
        http://www.natours.com/addNewTour
        where /addNewTour is an endpoint
        /getTour
        /updateTour
        /deleteTour
        /getTourByUser
        /deleteTourByUser
    Use HTTP methods (verbs)
        endpoints should only contain resources (nouns), and use HTTP methods for actions!
        /tours    POST Create
        /tours    GET  Read
        /tours/7  GET  Read
        /tours/7  PUT/PATCH Update
        /tours/7  DELETE
        /users/3/tours   GET
        /users/3/tours/9 DELETE
    Send data as JSON (usually)
        Light weight data interchange format
        String and Key Value Pair separated by : and ,
        Objects {}
        Arrays []
        JSEND includes status
    Be stateless
        stateless RESTful API: All state is handled on the client.
        This means request must contain all the information necessary to process a certain request
        The server should not have to remember previous requests.
        Examples of state: loggedIn  currentPage
        
        currentPage = 5
        GET /tours/nextPage
        nextPage = currentPage + 1
        send nextPage
        
        GET /tours/page/6   (state coming from client)

The Essense of Express Development: The request response cycle
    Incoming request
    Middleware#1 ... next()     E.g. parsing body
    Middleware#2 ... next()     E.g. logging
    Middleware#3 ... next()     E.g. setting headers
    Middleware#4 ... res.send() E.g. router
    Outgoing Response

    Oder is as defined in the code called as pipeline
    In Express everything is middleware even routers

ESLint and Prettier NPM Packages
 eslint
 prettier                       \
 eslint-config-prettier         \
 eslint-plugin-prettier         \
 eslint-config-airbnb           \
 eslint-plugin-node             \
 eslint-plugin-import           \
 eslint-plugin-jsx-a11y         \
 eslint-plugin-react            \
 --save-dev

 npm i eslint  prettier  eslint-config-prettier eslint-plugin-prettier eslint-config-airbnb  eslint-plugin-node  eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react  --save-dev




